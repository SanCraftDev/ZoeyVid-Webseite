name: dependency-updates

on:
  push:
  schedule:
    - cron:  "0 */6 * * *"
  workflow_dispatch:

jobs:          
  repos-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
         ref: ${{ github.ref_name }}
        
      - name: update repos
        run: | 
         export user=ZoeyVid
         export domain=zoeyvid.de
         rm -rf assets/repos
         mkdir assets/repos
         for repo in $(curl -skL https://api.github.com/orgs/$user/repos --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r ".[].name" | grep -v .github | grep -Pv \"\|$(curl -skL https://api.github.com/orgs/$user/repos --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq ".[] | select(.archived==true)" | jq -r ".name" | paste -s -d "|")\|\" | sort); do curl -skL https://raw.githubusercontent.com/$repo/$(curl -skL "https://api.github.com/repos/$user/$repo" --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r ".default_branch")/README.md -o assets/repos/$repo.md; done;
         echo { | tee -a assets/repos/repos.json
         for repo in $(curl -skL https://api.github.com/orgs/$user/repos --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r ".[].name" | grep -v .github | grep -Pv \"\|$(curl -skL https://api.github.com/orgs/$user/repos --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq ".[] | select(.archived==true)" | jq -r ".name" | paste -s -d "|")\|\" | sort); do echo \"$repo\": { \"name\": \"$repo\", \"html_url\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.html_url')\", \"readme\": \"https://$domain/assets/repos/$repo.md\", \"fork\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.fork')\", \"description\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.description')\", \"homepage\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.homepage')\"}, | tee -a assets/repos/repos.json; done;
         sed -i '$ d' assets/repos/repos.json
         for repo in $(curl -skL https://api.github.com/orgs/$user/repos --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r ".[].name" | grep -v .github | grep -Pv \"\|$(curl -skL https://api.github.com/orgs/$user/repos --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq ".[] | select(.archived==true)" | jq -r ".name" | paste -s -d "|")\|\" | sort -r | head -n 1); do echo \"$repo\": { \"name\": \"$repo\", \"html_url\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.html_url')\", \"readme\": \"https://$domain/assets/repos/$repo.md\", \"fork\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.fork')\", \"description\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.description')\", \"homepage\": \"$(curl -skL https://api.github.com/repos/$user/$repo --header "authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" | jq -r '.homepage')\"} | tee -a assets/repos/repos.json; done;
         echo } | tee -a assets/repos/repos.json
         jq . assets/repos/repos.json | tee assets/repos/index.json
         sed -i "s|null||g" assets/repos/index.json
         rm -rf assets/repos/repos.json
     
      - name: push changes
        run: |
          git config user.name "GitHub"
          git config user.email "noreply@github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -sm "update repos"
          git push
          
  marked-update:
    needs: repos-update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
         ref: ${{ github.ref_name }}

      - name: update marked version
        run: curl -L https://cdn.jsdelivr.net/npm/marked/marked.min.js -o assets/plugins/marked.min.js

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          signoff: true
          delete-branch: true
          commit-message: update marked version
          branch: update-marked-version
          title: update marked version to ${{ steps.update.outputs.version }}
          body: update marked version to ${{ steps.update.outputs.version }}
          
  test-json:
    needs: marked-update
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
         ref: ${{ github.ref_name }}
         
      - name: json-syntax-check
        uses: limitusus/json-syntax-check@v2
        with:
          pattern: "\\.json$*"

  tailwindcss-update:
    needs: marked-update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
         ref: ${{ github.ref_name }}

      - name: update tailwindcss
        uses: ZoeyVid/tailwindcss-update@develop
        with:
          input: assets/css/input.css
          output: assets/css/output.css
          
      - name: push changes
        run: |
          git config user.name "GitHub"
          git config user.email "noreply@github.com"
          git add -A
          git diff-index --quiet HEAD || git commit -sm "update tailwindcss"
          git push
          
  jquery-update:
    needs: tailwindcss-update
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
         ref: ${{ github.ref_name }}

      - name: update jquery version
        id: update
        run: |
          JQUERY_VERSION="$(
          git ls-remote --tags https://github.com/jquery/jquery \
              | cut -d/ -f3 \
              | sort -V \
              | tail -1 \
              | sed -E "s/\^\{\}//"
          )"
          curl -L https://code.jquery.com/jquery-$JQUERY_VERSION.min.js -o assets/plugins/jquery.min.js
          echo "version=$JQUERY_VERSION" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          signoff: true
          delete-branch: true
          commit-message: update jquery version to ${{ steps.update.outputs.version }}
          branch: update-jquery-version
          title: update jquery version to ${{ steps.update.outputs.version }}
          body: update jquery version to ${{ steps.update.outputs.version }}
